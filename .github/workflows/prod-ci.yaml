name: hello ops girls prod pipeline
run-name: prod-ci
on:
  push:
    branches: [workshop-part3]

env:
  AWS_ACCOUNT: "494526681395"
  AWS_REGION: "ap-southeast-1"

permissions:
  id-token: write
  contents: read


jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_KEY: ${{ secrets.SSH_KEY }}
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
      HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
      DOMAIN_NAME: ${{ github.event.repository.name }}.${{ secrets.DOMAIN_NAME }}
      STACK_NAME: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v3
      - id: aws-auth
        uses: "./.github/actions/aws-auth"
      - name: apply cloudformation stack
        run: aws cloudformation deploy --stack-name ${STACK_NAME} --template-file cloudformation/stack.yaml --parameter-overrides SecurityGroupName=devops-girls-2023 KeyName=devops-girls-2023 HostedZoneId=${HOSTED_ZONE_ID} DomainName=${DOMAIN_NAME} --capabilities CAPABILITY_NAMED_IAM --no-fail-on-empty-changeset
      - name: deploy application container
        run: |
          cd ansible

          sed -i "s/AWS_ACCOUNT/${AWS_ACCOUNT}/" roles/app/vars/main.yml
          sed -i "s/DOMAIN_NAME/${DOMAIN_NAME}/" roles/nginx/vars/main.yml

          ip=$(aws cloudformation describe-stacks --stack-name hello-ops-girls --query 'Stacks[0].Outputs[?OutputKey == `PublicIP`].OutputValue' --output text)
          echo "${ip}" >> hosts.ini

          echo "${SSH_KEY}" | base64 -d > devops-girls-2023.pem
          chmod 600 devops-girls-2023.pem
          ansible-playbook --private-key devops-girls-2023.pem deploy.yml
