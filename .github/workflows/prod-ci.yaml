name: hello ops girls prod pipeline
run-name: prod-ci
on:
  workflow_run:
    workflows: ["hello ops girls dev pipeline"]
    branches: [main]
    types:
      - completed
  push:
    branches: [workshop-part3]

env:
  AWS_ACCOUNT: "494526681395"
  AWS_REGION: "ap-southeast-1"

permissions:
  id-token: write
  contents: read


jobs:
  release-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: aws-auth
        uses: "./.github/actions/aws-auth"
      - name: tag and push prod image to ECR
        env:
          REGISTRY: ${{ steps.aws-auth.outputs.registry }}
          REPOSITORY: devopsgirl2023/hello-ops-girl
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG 
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest
  deploy:
    runs-on: ubuntu-latest
    env:
      HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
      DOMAIN_NAME: ${{ github.event.repository.name }}.${{ secrets.DOMAIN_NAME }}
      STACK_NAME: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v3
      - id: aws-auth
        uses: "./.github/actions/aws-auth"
      - name: apply cloudformation stack
        run: |
          aws cloudformation deploy --stack-name ${STACK_NAME} --template-file cloudformation/stack.yaml --parameter-overrides ParameterKey=SecurityGroupName,ParameterValue=devops-girls-2023 ParameterKey=KeyName,ParameterValue=devops-girls-2023 ParameterKey=HostedZoneId,ParameterValue=${HOSTED_ZONE_ID} ParameterKey=DomainName,ParameterValue=${DOMAIN_NAME} --no-fail-on-empty-changeset

          counter=0
          while [ ${counter} -lt 10 ]; do
            status=$(aws cloudformation describe-stacks --stack-name ${STACK_NAME} --query 'Stacks[0].StackStatus' --output text)
            
            if [ "${status}" = "CREATE_COMPLETE" ]; then
              echo "Stack create complete!"
              exit 0
            elif [ "${status}" = "UPDATE_COMPLETE" ]; then
              echo "Stack update complete!"
              exit 0
            elif [ "${status}" = "UPDATE_ROLLBACK_COMPLETE" ]; then
              echo "Stack update failed!"
              exit 1
            fi

            sleep 30
          done

          echo "Wait condition timed out!"
          exit 1
      - name: deploy application container
        run: "true"
